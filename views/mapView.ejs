<html>
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="initial-scale=1, maximum-scale=1, user-scalable=no"
    />
    <title>ArcGIS API for JavaScript Tutorials: Display a map</title>

    <style>
      html,
      body,
      #viewDiv {
        padding: 0;
        margin: 0;
        height: 100%;
        width: 100%;
      }
    </style>

    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <link
      rel="stylesheet"
      href="https://js.arcgis.com/4.23/esri/themes/light/main.css"
    />
    <script src="https://js.arcgis.com/4.23/"></script>

    <script type="module">
      import Map from "https://js.arcgis.com/4.23/@arcgis/core/Map.js";
      import MapView from "https://js.arcgis.com/4.23/@arcgis/core/views/MapView.js";
      import Legend from "https://js.arcgis.com/4.23/@arcgis/core/widgets/Legend.js";
      import esriConfig from "https://js.arcgis.com/4.23/@arcgis/core/config.js";
      import GeoJSONLayer from "https://js.arcgis.com/4.23/@arcgis/core/layers/GeoJSONLayer.js";
      import Graphic from "https://js.arcgis.com/4.23/@arcgis/core/Graphic.js";

      esriConfig.apiKey =
        "AAPK5abcfc9f607049c18510abd2ee5845a2Rmxnq0-ifuI_9rHW32rjMIWPGo0gygGfMKl4he_3xCSVIoIw6kNcEAET3lwLLyug";

      let pm25Point;

      const queryString = window.location.search;
      const urlParams = new URLSearchParams(queryString);
      const no = urlParams.get("no");

      if (no == "all") {
        const result = await axios.get("/map/mapNo5All");
        pm25Point = result.data;
      } else if (no == "a") {
        const year = urlParams.get("year");
        const result = await axios.get(`/map/mapNo5A?year=${year}`);
        pm25Point = result.data;
      } else if (no == "b") {
        const result = await axios.get("/map/mapNo5B");
        pm25Point = result.data;
      } else if (no == "c") {
        const result = await axios.get("/map/mapNo5C");
        pm25Point = result.data;
      } else if (no == "d") {
        const result = await axios.get("/map/mapNo5D");
        pm25Point = result.data.result;
      } else if (no == "e") {
        const result = await axios.get("/map/mapNo5E");
        pm25Point = result.data;
      } else if (no == "f") {
        const year = urlParams.get("year");
        const result = await axios.get(`/map/mapNo5F?year=${year}`);
        pm25Point = result.data;
      } else {
        const result = await axios.get("/map/mapNo5All");
        pm25Point = result.data;
      }

      const blob = await new Blob([JSON.stringify(pm25Point)], {
        type: "application/json",
      });
      const url = await URL.createObjectURL(blob);

      //lihk'xhkpclf'-hv,^]c9j]t06f
      const template = {
        title: "PM 2.5 Info",
        content:
          "Country {country}, {city}, Year {year}, PM25: {pm25}, Wbinc16_text: {wbinc16_text}",
        fieldInfos: [
          {
            fieldName: "time",
            format: {
              dateFormat: "short-date-short-time",
            },
          },
        ],
      };

      //สร้างรูปแบบจุด
      const renderer = {
        type: "simple",
        field: "pm25",
        symbol: {
          type: "simple-marker",
          color: [250, 250, 250],
          outline: {
            color: "black",
          },
        },

        //สร้างสีต่างๆให้จุด
        visualVariables: [
          {
            type: "color",
            field: "pm25",
            stops: [
              { value: 1, color: "#01E501" },
              { value: 10, color: "#FFFE00" },
              { value: 25, color: "#FD7F01" },
              { value: 35, color: "#FE0101" },
              { value: 50, color: "#7E0023" },
            ],
          },
        ],
      };

      //นำ GeoJSON มาทำ Layer บน Map
      const geojsonLayer = new GeoJSONLayer({
        url: url,
        copyright: "GIS ",
        popupTemplate: template,
        renderer: renderer,
        orderBy: {
          field: "Pm25",
        },
      });

      //สร้าง Map
      const map = new Map({
        basemap: "arcgis-navigation-night",
        layers: [geojsonLayer],
      });

      //สร้าง Map View
      const view = new MapView({
        map: map,
        center: [100.505513, 13.743732],
        zoom: 5,
        container: "viewDiv",
        constraints: {
          snapToZoom: true,
          minZoom: 2,
        },
        extent: {
          spatialReference: 4326,
        },
      });

      //สร้างป้ายบอกค่า pm25 ว่าสีนี้คือ pm25 มีค่าเท่าใด
      view.ui.add(
        new Legend({
          view: view,
        })
      );

      if (no == "d") {
        const result = await axios.get("/map/mapNo5D");
        const geom = result.data.polygon.geometry;

        const fillSymbol = {
          type: "simple-fill",
          color: [255, 255, 255, 0.5],
          outline: {
            color: [255, 255, 255],
            width: 1,
          },
        };

        //นำ Polygon มาวาดบนแผนที่
        const graphic = new Graphic({
          geometry: geom,
          symbol: fillSymbol,
        });

        view.graphics.add(graphic);
      }
    </script>
  </head>
  <body>
    <div id="viewDiv"></div>
  </body>
</html>
